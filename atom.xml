<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>好事</title>
  
  <subtitle>假山上 度过光影恍惚的下午</subtitle>
  <link href="https://wuzu15hao.com/atom.xml" rel="self"/>
  
  <link href="https://wuzu15hao.com/"/>
  <updated>2025-05-06T10:16:43.004Z</updated>
  <id>https://wuzu15hao.com/</id>
  
  <author>
    <name>winter</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>centos环境下部署nacos2.2.0</title>
    <link href="https://wuzu15hao.com/post/deployNacosInCentos/"/>
    <id>https://wuzu15hao.com/post/deployNacosInCentos/</id>
    <published>2025-04-24T03:40:49.000Z</published>
    <updated>2025-05-06T10:16:43.004Z</updated>
    
    <content type="html"><![CDATA[<h1 id="缘起"><a href="#缘起" class="headerlink" title="缘起"></a>缘起</h1><p>工作需要基于centos环境搭建一套nacos单机，现做简单记录。</p><h1 id="安装部署单机nacos"><a href="#安装部署单机nacos" class="headerlink" title="安装部署单机nacos"></a>安装部署单机nacos</h1><ol><li><p>安装java环境<br>yum install -y java-1.8.0-openjdk java-1.8.0-openjdk-devel</p></li><li><p>设置java环境变量<br>  vi &#x2F;etc&#x2F;profile</p></li></ol><p>  在文件末尾添加：<br>  export JAVA_HOME&#x3D;$(dirname $(dirname $(readlink $(which javac))))<br>  export PATH&#x3D;$JAVA_HOME&#x2F;bin:$PATH</p><p>  执行使配置生效：<br>  source &#x2F;etc&#x2F;profile</p><p>  验证安装：<br>  java -version</p><ol start="3"><li><p>下载安装nacos安装包<br>从github上下载nacos安装包<br>wget <a href="https://github.com/alibaba/nacos/releases/download/2.3.0/nacos-server-2.3.0.tar.gz">https://github.com/alibaba/nacos/releases/download/2.3.0/nacos-server-2.3.0.tar.gz</a><br>解压安装包<br>tar -zxvf nacos-server-2.3.0.tar.gz<br>mv nacos &#x2F;home&#x2F;gl&#x2F;nacos  # 选择路径</p></li><li><p>运行nacos （单机模式）<br>vi &#x2F;home&#x2F;gl&#x2F;nacos&#x2F;bin&#x2F;startup.sh<br>找到：MODE&#x3D;”cluster” 改为：MODE&#x3D;”standalone”<br>或者运行时加参数：<br>sh startup.sh -m standalone</p></li><li><p>查看nacos是否启动成功<br>  ps -ef | grep nacos<br>  netstat -tunlp | grep 8848<br>  也可以访问浏览器：http:&#x2F;&#x2F;&lt;服务器IP&gt;:8848&#x2F;nacos</p></li></ol><p>  也可以观察启动日志，成功的日志会有nacos字样的图形展示<br>  &#x2F;nacos&#x2F;logs&#x2F;start.out</p><p>  停止nacos命令：<br>  sh &#x2F;home&#x2F;gl&#x2F;nacos&#x2F;bin&#x2F;shutdown.sh</p><ol start="6"><li>本地项目相关配置<blockquote></blockquote>spring:<br>  application:<br> name: mes<br>  profiles:<br> active: dev #表示开发环境<br>  cloud:<br> nacos:<br>   discovery:<br> server-addr: 192.168.92.61:8848<br> service: mes<br> # 禁用nacos自动配置<br> enabled: true<br> namespace: 924181f7-3333-1111-2222-41979ef403dc<br> group: DEFAULT_GROUP<br> username: nacos<br> password: nacos<br>   config:<br> server-addr: 192.168.92.61:8848<br> file-extension: yaml<br> # 禁用nacos自动配置<br> enabled: true<br> namespace: 924181f7-3333-1111-2222-41979ef403dc<br> group: DEFAULT_GROUP<br> # 服务器名字<br> prefix: mes<br> username: nacos<br> password: nacos</li></ol><h1 id="部署持久化的mysql"><a href="#部署持久化的mysql" class="headerlink" title="部署持久化的mysql"></a>部署持久化的mysql</h1><ol><li><p>执行相关脚本<br>  2.2.0版本的nacos，需要来到 &#x2F;nacos&#x2F;conf&#x2F;mysql-schema.sql内容，在navicate执行该脚本，创建对应表及数据</p></li><li><p>修改&#x2F;nacos&#x2F;conf&#x2F;application.properties 文件，修改内容如下：</p></li></ol>  <blockquote>  #*************** Config Module Related Configurations ***************#  ### If use MySQL as datasource:  spring.datasource.platform=mysql<h3 id="Count-of-DB"><a href="#Count-of-DB" class="headerlink" title="Count of DB:"></a>Count of DB:</h3><p>  db.num&#x3D;1</p><h3 id="Connect-URL-of-DB"><a href="#Connect-URL-of-DB" class="headerlink" title="Connect URL of DB:"></a>Connect URL of DB:</h3><p>  db.url.0&#x3D;jdbc:mysql:&#x2F;&#x2F;ip地址:3306&#x2F;数据库名?characterEncoding&#x3D;utf8&amp;connectTimeout&#x3D;1000&amp;socketTimeout&#x3D;3000&amp;autoReconnect&#x3D;true&amp;useUnicode&#x3D;true&amp;useSSL&#x3D;false&amp;serverTimezone&#x3D;UTC<br>  db.user.0&#x3D;数据库账号<br>  db.password.0&#x3D;数据库密码</p><h3 id="If-turn-on-auth-system"><a href="#If-turn-on-auth-system" class="headerlink" title="If turn on auth system:"></a>If turn on auth system:</h3><p>  nacos.core.auth.enabled&#x3D;true<br>  nacos.security.user.name&#x3D;nacos<br>  nacos.security.user.password&#x3D;nacos<br>  </blockquote></p><ol start="3"><li>停止并重启nacos<br>注意，2.2.0 版本的访问地址为：<a href="http://ip地址:8848/nacos/index.html">http://ip地址:8848/nacos/index.html</a></li></ol><h1 id="遇到问题"><a href="#遇到问题" class="headerlink" title="遇到问题"></a>遇到问题</h1><p>在部署nacos过程中，遇到一些问题，做如下梳理：</p><h2 id="账号密码登录错误"><a href="#账号密码登录错误" class="headerlink" title="账号密码登录错误"></a>账号密码登录错误</h2><p>  部署完成，登录页面能够正常打开，但是输入配置文件当中的账号密码，仍然无法登录，提示账号密码错误。手动修改对应数据库user表，对 password md5 加密后，仍然无法登录。最终排查发现是 db.url.0 中配置的 “ip地址：3306&#x2F;数据库名”，其中数据库名我没有调整成和 mysql 数据库一致，导致其实一直没有正确的连接到数据库。</p><h2 id="能注册到-nacos-但是无法获取到对应的配置"><a href="#能注册到-nacos-但是无法获取到对应的配置" class="headerlink" title="能注册到 nacos 但是无法获取到对应的配置"></a>能注册到 nacos 但是无法获取到对应的配置</h2><p>  登录后发现系统正常注册，但是一直无法获取到配置。各种原因排查一遍，需要注意如下两点：</p><p>  其一，配置文件的dataID &#x3D; {application.name}-{profiles.active}.{nacos.config.file-extension},项目在启动的时候会优先加载{application.name}‑{profile}.{file‑extension}，再加载{application.name}.{file‑extension}</p><p>  其二，在 Spring 项目中，application.yml 和 bootstrap.yml 都是用来定义配置属性的 YAML 文件，但它们在加载时机、作用范围和适用场景上有明显区别：其中 bootstrap.yml 最早被加载，位于 spring 上下文初始化阶段，而 application.yml 会在 Spring 上下文创建完基础环境后加载，即应用阶段。</p><p>  我发现自己无法获取配置的原因就是第二点，配置写在 application.yml 当中，导致一直读取不到 nacos 配置文件，换到 bootstrap.yml 果然恢复。</p>]]></content>
    
    
    <summary type="html">部署单机的centos以及两处错误排查</summary>
    
    
    
    <category term="技术" scheme="https://wuzu15hao.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="nacos" scheme="https://wuzu15hao.com/tags/nacos/"/>
    
    <category term="centos" scheme="https://wuzu15hao.com/tags/centos/"/>
    
    <category term="踩坑" scheme="https://wuzu15hao.com/tags/%E8%B8%A9%E5%9D%91/"/>
    
  </entry>
  
  <entry>
    <title>匆匆，真的是匆匆</title>
    <link href="https://wuzu15hao.com/post/writeGoodNews/"/>
    <id>https://wuzu15hao.com/post/writeGoodNews/</id>
    <published>2025-03-31T07:06:30.000Z</published>
    <updated>2025-04-07T08:02:16.186Z</updated>
    
    <content type="html"><![CDATA[<h1 id="缘起"><a href="#缘起" class="headerlink" title="缘起"></a>缘起</h1><p>一直想有属于自己的博客网站，去年折腾一阵，域名服务器 WordPress 都搞过，最后发现要备案。望着那复杂繁琐的备案流程，顿时心理那点小火苗消失无踪。今年机缘巧合下，看到<a href="https://blog.kenxu.top/post/how-to-create-your-own-blog-p1-preparation/">Ken大佬的博客</a>分享的教程，通过 hexo + netlify + github 实现，效果也很好，而且只需要一个域名即可，还剩下服务器的费用，于是又折腾起来。这次在 ChatGPT 的帮助下顺利很多，于是终于有了眼前这东西。真的非常感谢 Ken 大佬，万分感谢。</p><h1 id="关于博客内容"><a href="#关于博客内容" class="headerlink" title="关于博客内容"></a>关于博客内容</h1><p>博客的内容会围绕着我的工作与生活，初步打算分为如下几块：书影音记录、工作中遇到的问题记录、学习探索记录以及不定时的碎碎念。</p><p>从初中起就很喜欢记日记，一直延续到高中三年期间，大约写了六七本日记。大学期间每天好像纵马狂奔，心思在光怪陆离的世界里流连忘返，再也回不到那一方小小日记本中。一转眼工作多年，时间如水一般流淌，一颗心在各色的欲望中四处冲撞而不停歇，偶尔夜里辗转反侧，只觉得好累。</p><p>不知道有没有朋友听过一个采样音频，内容来源是《大话西游》和《风平浪静》这两部电影。将前者中著名的那句歌词：</p><blockquote><p>Only you ~ </p></blockquote><p>和后者中角色李鸿其和章宇的一段对话：</p><blockquote><p>匆匆，真的是匆匆。<br>你说什么？<br>我说人生啊，兄弟。</p></blockquote><p>混合在一起，形成奇妙的化学反应。我每次听到这个采样，都会浑身泛起鸡皮疙瘩。对我来说这段音频就是时间如流水逝去最好的念白，让人情不自禁的感慨光阴流逝，不舍昼夜，进而想过去的时光，在生命里居然找不到痕迹。</p><p>所以我想写博客，我试图记录走过的痕迹，我想积攒被河水冲刷上岸的贝壳，我想捞起在激流中打转的落叶。</p>]]></content>
    
    
    <summary type="html">我说人生啊，兄弟</summary>
    
    
    
    <category term="杂谈" scheme="https://wuzu15hao.com/categories/%E6%9D%82%E8%B0%88/"/>
    
    
    <category term="生活" scheme="https://wuzu15hao.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
</feed>
